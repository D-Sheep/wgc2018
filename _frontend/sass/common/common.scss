// BASE ELEMENTS
html { height: 100%; }

* {
	tap-highlight-color: rgba(0,0,0,0);
	-webkit-tap-highlight-color: rgba(0,0,0,0);
}

*,
*:before,
*:after {
	box-sizing: border-box;
}

html {
	font-size: 100%;
	width: 100%;
}

body {
	text-size-adjust: 100%;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-ms-text-size-adjust: 100%;
	font-family: $ffBodycopy;
	font-size: 16px;
	font-weight: $fwRegular;
	line-height: 1.5em;
	letter-spacing: 0;
	color: #000000;
	background-color: #ffffff;
	padding: 0;
	margin: 0;
	width: 100%;
	height: auto;
	overflow-x: hidden;
}

html.is-scroll-fixed > body {
	overflow: hidden;
}

// COMMON ELEMENTS
a {
	outline: 0;
	box-shadow: none;
	color: inherit;
	text-decoration: underline;

	&:hover {
		text-decoration: none;
	}
}

input::-ms-clear {
	display: none;
}

svg {
	display: block;
	width: 100%;
	height: 100%;
	overflow: visible;
}

@include breakpoint (phone down) {
	body {
		font-size: 14px;
	}
}

// COMMON MIXINS INITS
@include css-icons-init();

// FOR DEVEL PURPOSE
/* @if NODE_ENV='devel' */

// for debug only vuejs Data storage object
pre {
	font-size: 10px;
	line-height: 0.9em;
}

// visual helper for definition of mediaquery
body {
	&:after {
		content: '';
		@include position(fixed, null 0 0 null);
		z-index: 999;
		background: rgba(255,255,255, 0.75);
		color: #000;
		padding: 5px 10px;
		font-size: 11px;
		line-height: 1em;
	}

	@each $breakpoint, $size in reverse($breakpoints) {
		@include breakpoint($breakpoint down) { &:after { content: '#{$breakpoint} [#{$size} +]'; } }
	}
}

/* @endif */
